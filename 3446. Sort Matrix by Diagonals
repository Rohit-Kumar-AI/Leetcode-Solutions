class Solution {
public:
    vector<vector<int>> sortMatrix(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<vector<int>> ans(n, vector<int>(n));
        vector<vector<int>> diag(2 * n + 1);
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                diag[i - j + n].push_back(grid[i][j]);
            }
        }
        for (int d = 0; d < 2 * n + 1; ++d) {
            if (d < n) sort(diag[d].begin(), diag[d].end(), greater<int>());
            else sort(diag[d].begin(), diag[d].end());
        }
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                int d = i - j + n;
                ans[i][j] = diag[d].back();
                diag[d].pop_back();
            }
        }
        return ans;
    }
};
