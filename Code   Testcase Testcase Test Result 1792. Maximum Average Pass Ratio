#include <vector>
#include <queue>
using namespace std;

class Solution {
public:
    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
        priority_queue<tuple<double, int, int>> pq;
        auto gain = [](int pass, int total) {
            return (pass + 1) / double(total + 1) - pass / double(total);
        };
        for (auto& c : classes) {
            int pass = c[0], total = c[1];
            pq.emplace(gain(pass, total), pass, total);
        }
        for (int i = 0; i < extraStudents; ++i) {
            auto [_, pass, total] = pq.top();
            pq.pop();
            ++pass; ++total;
            pq.emplace(gain(pass, total), pass, total);
        }
        double sum = 0.0;
        while (!pq.empty()) {
            auto [_, pass, total] = pq.top();
            pq.pop();
            sum += pass / double(total);
        }
        return sum / classes.size();
    }
};
